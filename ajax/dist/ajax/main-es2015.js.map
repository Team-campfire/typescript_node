{"version":3,"sources":["./src/environments/environment.ts","./src/app/ajax/ajax.component.ts","./src/app/ajax/ajax.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { HttpClient} from '@angular/common/http';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-ajax',\n  templateUrl: './ajax.component.html',\n  styleUrls: ['./ajax.component.css']\n})\n\n\nexport class AjaxComponent implements OnInit {\n\n  // single element\n\n  // name = new FormControl('');\n\n  // updateName() {\n  //   this.name.setValue('Nancy');\n  // }\n\n  // form group\n  // profileForm = new FormGroup({\n  //   firstName: new FormControl(''),\n  //   lastName: new FormControl(''),\n  // });\n\n  // onSubmit(mi : any): void {\n  //   // TODO: Use EventEmitter with form value\n  //   console.warn(this.profileForm.value);\n  // }\n\n  // onClickSubmit(mi : any): void {\n  //   this.http.post<any>('/submitCategories', {\n      // eventCategory:  this.eventCategory,\n      // eventDescription:  mi.eventDescription,\n      // clubCategory: this.clubCategory,\n      // clubDescription:  mi.clubDescription\n  //   })\n  //   .subscribe((data)  => { console.log(data); }, (err) => {\n  //     console.log(\"Error\", err);\n  //   });\n  // }\n\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    // alert(this.profileForm.value.firstName);\n    // alert(this.profileForm.get('firstName')!.value);\n    // alert(this.profileForm.firstName.value);\n    // console.warn(this.profileForm.value);\n\n    let formData: any = new FormData();\n    this.fname = this.profileForm.value.firstName;\n    formData.append(\"name\", this.profileForm.get('firstName')!.value);\n    alert(formData.getAll('name'));\n\n    this.http.get<any>('/submitCategories', formData\n      // email:  this.profileForm.value.firstName\n\n      // fname: this.fname\n      // eventCategory:  this.eventCategory,\n      // eventDescription:  mi.eventDescription,\n      // clubCategory: this.clubCategory,\n      // clubDescription:  mi.clubDescription\n    )\n    .subscribe((data)  => { console.log(data); }, (err) => {\n      console.log(\"Error\", err);\n    });\n  }\n\n  // nested form group\n  // profileForm = new FormGroup({\n  //   firstName: new FormControl(''),\n  //   lastName: new FormControl(''),\n  //   address: new FormGroup({\n  //     street: new FormControl(''),\n  //     city: new FormControl(''),\n  //     state: new FormControl(''),\n  //     zip: new FormControl('')\n  //   })\n  // });\n\n  // nested update\n  updateProfile() {\n    this.profileForm.patchValue({\n      firstName: 'Nancy',\n      address: {\n        street: '123 Drew Street'\n      },\n      colors: {\n        color: 'green'\n      }\n    });\n  }\n\n  // form builder\n\n  profileForm = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: [''],\n    address: this.fb.group({\n      street: [''],\n      city: [''],\n      state: [''],\n      zip: ['']\n    }),\n    colors: this.fb.group({\n      color: ['']\n    }),\n    // aliases\n    aliases: this.fb.array([\n      this.fb.control('')\n    ])\n  });\n\n  get aliases() {\n    return this.profileForm.get('aliases') as FormArray;\n  }\n\n  addAlias() {\n    this.aliases.push(this.fb.control(''));\n  }\n\n  // src:\n  // https://angular.io/guide/reactive-forms\n  // https://v2.angular.io/docs/ts/latest/guide/reactive-forms.html\n  // https://www.elite-corner.com/2018/11/angular-json-pipe-example.html\n  // https://stackoverflow.com/questions/43713558/how-to-get-a-single-value-from-formgroup\n\n  // https://stackoverflow.com/questions/44602420/angular2-4-populate-form-after-request\n  // https://angular.io/api/forms/FormGroup\n  // https://stackoverflow.com/questions/49078286/angular-5-reactive-forms-radio-button-group/49078441\n  // https://stackoverflow.com/questions/40647073/angular-2-accessing-data-from-formarray\n  // https://www.w3schools.com/jsref/met_console_warn.asp\n  // https://www.pluralsight.com/guides/how-to-submit-form-data-using-angular\n  // https://stackoverflow.com/questions/43800907/typescript-strictnullchecks-object-is-possibly-null\n  // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator\n\n  public loginStatus: string;\n  public email: string;\n  public theHtmlString: string;\n  public rcode: string;\n  public num: string;\n  public fname: string;\n\n  // constructor() { }\n\n  constructor(private http: HttpClient, private fb: FormBuilder) {\n    this.loginStatus = \"\";\n    this.email = \"\";\n    this.theHtmlString = \"\";\n    this.rcode = \"\";\n    this.num = \"\";\n    this.fname = \"\";\n  }\n\n  ngOnInit(): void {\n    // this.num = \"8\";\n    // alert(this.num);\n    //\n    // this.httpService.sendGetRequest('/random2/' + this.num).subscribe((data) => {\n    //\n    //   interface RandomObj2 {\n    //     msg: string;\n    //   }\n    //\n    //   let obj: RandomObj2 = JSON.parse(JSON.stringify(data));\n    //   this.theHtmlString = obj.msg;\n    // })\n    // this.rcode = this.makeid(8);\n  }\n\n  // onClickSubmit(mi : any): void {\n  //   this.http.post<any>('/submitCategories', {\n  //     eventCategory:  this.eventCategory,\n  //     eventDescription:  mi.eventDescription,\n  //     clubCategory: this.clubCategory,\n  //     clubDescription:  mi.clubDescription\n  //   })\n  //   .subscribe((data)  => { console.log(data); }, (err) => {\n  //     console.log(\"Error\", err);\n  //   });\n  // }\n\n  onClickSubmit(mi : any): void {\n    // email = data.emailid;\n    this.http.get<any>('/random/' + mi.emailid).subscribe((data) => {\n      // https://angular.io/guide/observables\n      // https://stackoverflow.com/questions/44921788/what-is-subscribe-in-angular/51935993\n      // https://luukgruijs.medium.com/understanding-creating-and-subscribing-to-observables-in-angular-426dbf0b04a3\n      /*\n       * This quickly gets tedious.\n       * Use external libraries.\n       */\n       // subscribing\n       // https://angular.io/guide/observables\n       // https://stackoverflow.com/questions/44921788/what-is-subscribe-in-angular/51935993\n       // https://luukgruijs.medium.com/understanding-creating-and-subscribing-to-observables-in-angular-426dbf0b04a3\n\n       // html binding\n       // https://stackoverflow.com/questions/31548311/angular-html-binding\n       // https://angular.io/guide/property-binding#binding-targets\n\n       // Property 'theHtmlString' has no initializer and is not definitely assigned in the constructor.\n       // https://stackoverflow.com/questions/49699067/property-has-no-initializer-and-is-not-definitely-assigned-in-the-construc\n\n       // send parameter from typescript to node\n       // https://stackoverflow.com/questions/44280303/angular-http-get-with-parameter\n\n       // query string\n       // https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n       // https://stackoverflow.com/questions/17007997/how-to-access-the-get-parameters-after-in-express\n      interface RandomObj {\n        msg: string;\n      }\n\n      let obj: RandomObj = JSON.parse(JSON.stringify(data));\n      this.loginStatus = obj.msg;\n    })\n  }\n\n  makeid(length: number): string {\n    let result: string[] = [];\n    let characters: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!&%$#@*^';\n    let charactersLength: number = characters.length;\n    for (let i: number = 0; i < length; i++) {\n        result.push(characters.charAt(Math.floor(Math.random() *\n            charactersLength)));\n    }\n    return result.join('');\n  }\n\n}\n","<form #userlogin = \"ngForm\" (ngSubmit) = \"onClickSubmit(userlogin.value)\" >\n   <input type = \"text\" name = \"emailid\" placeholder = \"emailid\" ngModel>\n   <br/>\n   <input type = \"password\" name = \"passwd\" placeholder = \"passwd\" ngModel>\n   <br/>\n   <input type = \"submit\" value = \"submit\">\n</form>\n\n<p [innerHTML]=\"theHtmlString\"></p>\n<p [innerHTML]=\"rcode\"></p>\n<p [innerHTML]=\"num\"></p>\n\n<p> {{ loginStatus }} </p>\n\n<!-- single form -->\n<!-- <input type=\"text\" [formControl]=\"name\">\n\n<p>\n  Value: {{ name.value }}\n</p>\n\n<p>\n  <button (click)=\"updateName()\">Update Name</button>\n</p> -->\n\n<!-- form group -->\n<!-- <form [formGroup]=\"profileForm\"> -->\n<!-- <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n  <label>\n    First Name:\n    <input type=\"text\" formControlName=\"firstName\">\n  </label>\n\n  <label>\n    Last Name:\n    <input type=\"text\" formControlName=\"lastName\">\n  </label>\n\n  <button type=\"submit\" [disabled]=\"!profileForm.valid\">Submit</button>\n</form> -->\n\n\n<!-- test -->\n<!-- <p>\n  First name: {{ profileForm.firstName }}\n  Last name: {{ profileForm.lastName }}\n</p> -->\n\n\n<!-- nested form group -->\n<form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n\n  <label>\n    First Name:\n    <input type=\"text\" formControlName=\"firstName\">\n  </label>\n\n  <label>\n    Last Name:\n    <input type=\"text\" formControlName=\"lastName\">\n  </label>\n\n  <div formGroupName=\"address\">\n    <h3>Address</h3>\n\n    <label>\n      Street:\n      <input type=\"text\" formControlName=\"street\">\n    </label>\n\n    <label>\n      City:\n      <input type=\"text\" formControlName=\"city\">\n    </label>\n\n    <label>\n      State:\n      <input type=\"text\" formControlName=\"state\">\n    </label>\n\n    <label>\n      Zip Code:\n      <input type=\"text\" formControlName=\"zip\">\n    </label>\n  </div>\n\n  <div formGroupName=\"colors\">\n    <label>\n      Red:\n      <input type=\"radio\" value=\"red\" formControlName=\"color\">\n    </label>\n    <label>\n      Green:\n      <input type=\"radio\" value=\"green\" formControlName=\"color\">\n    </label>\n    <label>\n      Green:\n      <input type=\"radio\" value=\"blue\" formControlName=\"color\">\n    </label>\n  </div>\n\n  <div formArrayName=\"aliases\">\n    <h3>Aliases</h3> <button (click)=\"addAlias()\">Add Alias</button>\n\n    <div *ngFor=\"let alias of aliases.controls; let i=index\">\n      <!-- The repeated alias template -->\n      <label>\n        Alias:\n        <input type=\"text\" [formControlName]=\"i\">\n      </label>\n    </div>\n  </div>\n\n  <button type=\"submit\" [disabled]=\"!profileForm.valid\">Submit</button>\n</form>\n\n<p>\n  <button (click)=\"updateProfile()\">Update Profile</button>\n</p>\n\n<p>{{profileForm.value | json}}</p>\n\n<p>\n  Form Status: {{ profileForm.status }}\n</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ajax';\n}\n","<app-ajax></app-ajax>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AjaxComponent } from './ajax/ajax.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AjaxComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}